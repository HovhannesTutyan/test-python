<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="3" time="340.579" timestamp="2021-12-17T08:28:04.732441" hostname="c1e055179ef6"><testcase classname="test_2.PythonOrgSearch" name="test_go_to_about" time="11.218" /><testcase classname="test_2.PythonOrgSearch" name="test_go_to_community" time="300.123"><failure message="selenium.common.exceptions.WebDriverException: Message: Could not start a new session. New session request timed out&#10;Build info: version: '4.1.0', revision: '87802e897b'&#10;System info: host: 'chrome', ip: '172.22.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.16.3-microsoft-standard-WSL2', java.version: '11.0.11'&#10;Driver info: driver.version: unknown&#10;Stacktrace:&#10;    at org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue.addToQueue (LocalNewSessionQueue.java:199)&#10;    at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.lambda$new$0 (NewSessionQueue.java:68)&#10;    at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle (Route.java:192)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.execute (NewSessionQueue.java:120)&#10;    at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute (SpanWrappedHttpHandler.java:86)&#10;    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)&#10;    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.grid.router.Router.execute (Router.java:91)&#10;    at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0 (EnsureSpecCompliantResponseHeaders.java:34)&#10;    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)&#10;    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.remote.http.Route$NestedRoute.handle (Route.java:270)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)&#10;    at org.openqa.selenium.remote.http.Route.execute (Route.java:68)&#10;    at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0 (AddWebDriverSpecHeaders.java:35)&#10;    at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)&#10;    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)&#10;    at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)&#10;    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)&#10;    at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0 (SeleniumHandler.java:44)&#10;    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)&#10;    at java.util.concurrent.FutureTask.run (FutureTask.java:264)&#10;    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)&#10;    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)&#10;    at java.lang.Thread.run (Thread.java:829)">self = &lt;class 'test_2.PythonOrgSearch'&gt;

    @classmethod
    def setUp(self):
&gt;       self.driver = webdriver.Remote(command_executor="http://chrome:4444/wd/hub", desired_capabilities=desired_capabilities.DesiredCapabilities.CHROME)

home/remote_user/selenium/test_2.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:268: in __init__
    self.start_session(capabilities, browser_profile)
usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:359: in start_session
    response = self.execute(Command.NEW_SESSION, parameters)
usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:424: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fae23ef0b20&gt;
response = {'status': 500, 'value': '{\n  "value": {\n    "additionalInformation": "Driver info: driver.version: unknown",\n    "... out",\n    "buildInformation": {\n      "buildRevision": "87802e897b",\n      "releaseLabel": "4.1.0"\n    }\n  }\n}'}

    def check_response(self, response: Dict[str, Any]) -&gt; None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = self._value_or_default(frame, 'lineNumber', '')
                        file = self._value_or_default(frame, 'fileName', '&lt;anonymous&gt;')
                        if line:
                            file = "%s:%s" % (file, line)
                        meth = self._value_or_default(frame, 'methodName', '&lt;anonymous&gt;')
                        if 'className' in frame:
                            meth = "%s.%s" % (frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.WebDriverException: Message: Could not start a new session. New session request timed out
E       Build info: version: '4.1.0', revision: '87802e897b'
E       System info: host: 'chrome', ip: '172.22.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.16.3-microsoft-standard-WSL2', java.version: '11.0.11'
E       Driver info: driver.version: unknown
E       Stacktrace:
E           at org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue.addToQueue (LocalNewSessionQueue.java:199)
E           at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.lambda$new$0 (NewSessionQueue.java:68)
E           at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle (Route.java:192)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.execute (NewSessionQueue.java:120)
E           at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute (SpanWrappedHttpHandler.java:86)
E           at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)
E           at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.grid.router.Router.execute (Router.java:91)
E           at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0 (EnsureSpecCompliantResponseHeaders.java:34)
E           at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)
E           at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.remote.http.Route$NestedRoute.handle (Route.java:270)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:336)
E           at org.openqa.selenium.remote.http.Route.execute (Route.java:68)
E           at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0 (AddWebDriverSpecHeaders.java:35)
E           at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)
E           at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)
E           at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)
E           at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:64)
E           at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0 (SeleniumHandler.java:44)
E           at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)
E           at java.util.concurrent.FutureTask.run (FutureTask.java:264)
E           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)
E           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)
E           at java.lang.Thread.run (Thread.java:829)

usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py:247: WebDriverException</failure></testcase><testcase classname="test_2.PythonOrgSearch" name="test_search_in_python_org" time="28.895" /></testsuite></testsuites>